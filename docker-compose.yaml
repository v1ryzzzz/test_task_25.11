services:
  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  backend:
    build:
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres

  rabbitmq-consumer:
    build:
      dockerfile: ./Dockerfile
    command: ["python", "rabbitmq_consumer.py"]
    depends_on:
      - backend
      - rabbitmq
    env_file:
      - .env
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    restart: always

  kafka-consumer:
      build:
        dockerfile: ./Dockerfile
      command: [ "python", "kafka_consumer.py" ]
      depends_on:
        - backend
        - kafka
      env_file:
        - .env
      restart: always
